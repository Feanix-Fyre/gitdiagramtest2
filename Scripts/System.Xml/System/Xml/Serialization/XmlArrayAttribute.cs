using System.Text;
using System.Xml.Schema;

namespace System.Xml.Serialization;

/// <summary>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a particular class member as an array of XML elements.</summary>
[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.ReturnValue, AllowMultiple = false)]
public class XmlArrayAttribute : Attribute
{
	private string elementName;

	private XmlSchemaForm form;

	private bool isNullable;

	private string ns;

	private int order;

	/// <summary>Gets or sets the XML element name given to the serialized array.</summary>
	/// <returns>The XML element name of the serialized array. The default is the name of the member to which the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> is assigned.</returns>
	public string ElementName => null;

	/// <summary>Gets or sets a value that indicates whether the XML element name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified or unqualified.</summary>
	/// <returns>One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values. The default is <see langword="XmlSchemaForm.None" />.</returns>
	public XmlSchemaForm Form => default(XmlSchemaForm);

	/// <summary>Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</summary>
	/// <returns>
	///     <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</returns>
	public bool IsNullable => false;

	/// <summary>Gets or sets the namespace of the XML element.</summary>
	/// <returns>The namespace of the XML element.</returns>
	public string Namespace => null;

	/// <summary>Gets or sets the explicit order in which the elements are serialized or deserialized.</summary>
	/// <returns>The order of the code generation.</returns>
	public int Order => 0;

	internal void AddKeyHash(StringBuilder sb)
	{
	}
}
