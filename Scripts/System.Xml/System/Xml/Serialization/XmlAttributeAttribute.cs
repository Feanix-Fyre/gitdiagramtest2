using System.Text;
using System.Xml.Schema;

namespace System.Xml.Serialization;

/// <summary>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize the class member as an XML attribute.</summary>
[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.ReturnValue)]
public class XmlAttributeAttribute : Attribute
{
	private string attributeName;

	private string dataType;

	private Type type;

	private XmlSchemaForm form;

	private string ns;

	/// <summary>Gets or sets the name of the XML attribute.</summary>
	/// <returns>The name of the XML attribute. The default is the member name.</returns>
	public string AttributeName => null;

	/// <summary>Gets or sets the XSD data type of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
	/// <returns>An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema: DataTypes".</returns>
	public string DataType
	{
		get
		{
			return null;
		}
		set
		{
		}
	}

	/// <summary>Gets or sets a value that indicates whether the XML attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified.</summary>
	/// <returns>One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values. The default is <see langword="XmlForm.None" />.</returns>
	public XmlSchemaForm Form => default(XmlSchemaForm);

	/// <summary>Gets or sets the XML namespace of the XML attribute.</summary>
	/// <returns>The XML namespace of the XML attribute.</returns>
	public string Namespace => null;

	/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class and specifies the name of the generated XML attribute.</summary>
	/// <param name="attributeName">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates. </param>
	public XmlAttributeAttribute(string attributeName)
	{
	}

	internal void AddKeyHash(StringBuilder sb)
	{
	}
}
